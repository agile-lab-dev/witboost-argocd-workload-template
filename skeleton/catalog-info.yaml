{% set dataProductMajorVersion = values.identifier.split(".")[2] %}

apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: ${{ values.identifier }}
  description: ${{ values.description | dump }}
  annotations:
    gitlab.com/project-slug: ${{ values.owner + "/" + values.repo }}
    backstage.io/techdocs-ref: dir:.
  tags:
    - workload
spec:
  type: workload
  lifecycle: experimental
  owner: ${{ values.developmentGroup | dump }}
  system: ${{ values.dataproduct | dump }}
  domain: ${{ values.domain | dump }}
  mesh:
    name: ${{ values.name | dump }}
    fullyQualifiedName: ${{ values.domainName }} - ${{ values.dataproductName }} - version ${{ dataProductMajorVersion }} - ${{ values.name }}
    description: ${{ values.description | dump }}
    kind: workload
    version: ${{ values.identifier.split(".")[2] + ".0.0" }}
    infrastructureTemplateId: ${{ values.infrastructureTemplateId }}
    useCaseTemplateId: ${{ values.useCaseTemplateId }}:${{ values.useCaseTemplateVersion }}
    dependsOn: {% if values.dependsOn | length > 0 %}{% for i in values.dependsOn %}
      - ${{ i }}{% endfor %}{% else %}[]{% endif %}
    platform: ArgoCD
    technology: ArgoCD
    workloadType: batch
    connectionType: DataPipeline
    tags: {% if values.tags | length > 0 %}{% for i in values.tags %}
      - tagFQN: ${{ i }}
        source: Tag
        labelType: Manual
        state: Confirmed{% endfor %}{% else %}[]{% endif %}
    readsFrom: {% if values.readsFrom | length > 0 %}{% for i in values.readsFrom %}
      - ${{ i }}{% endfor %}{% else %}[]{% endif %}
    specific:
      name: ${{ values.name | replace(r/ /g, ".") | lower }}
      project: ${{ values.domainName | replace(r/ /g, ".") | lower }}-${{ values.dataproductName | replace(r/ /g, ".") | lower}}-v${{ dataProductMajorVersion }}
      destination:
        namespace: ${{ values.namespace }}
        server: ${{ values.server | dump }}
      source:
        path: ${{ values.path | dump }}
        repoURL: ${{ values.destination | dump }}
        targetRevision: ${{ values.targetRevision | dump }}
      syncPolicy:
        automated: {% if values.automated %}
          prune: ${{ values.prune | dump }}
          selfHeal: ${{ values.selfHeal | dump }}
        {% else %} null {% endif %}
